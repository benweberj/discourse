[{"/Users/benweber/repos/discourse/src/styles.js":"1","/Users/benweber/repos/discourse/src/components/Text.jsx":"2","/Users/benweber/repos/discourse/src/components/Discourse.jsx":"3","/Users/benweber/repos/discourse/src/components/Img.jsx":"4","/Users/benweber/repos/discourse/src/components/Button.jsx":"5","/Users/benweber/repos/discourse/src/index.js":"6","/Users/benweber/repos/discourse/src/components/Div.jsx":"7","/Users/benweber/repos/discourse/src/components/ThemeToggler.jsx":"8","/Users/benweber/repos/discourse/src/Preview.jsx":"9","/Users/benweber/repos/discourse/src/sketches/particleMesh.js":"10","/Users/benweber/repos/discourse/src/Home.jsx":"11"},{"size":1981,"mtime":1606202976687,"results":"12","hashOfConfig":"13"},{"size":2119,"mtime":1606202934147,"results":"14","hashOfConfig":"13"},{"size":1226,"mtime":1606203846464,"results":"15","hashOfConfig":"13"},{"size":1065,"mtime":1606191640932,"results":"16","hashOfConfig":"13"},{"size":2919,"mtime":1600573800279,"results":"17","hashOfConfig":"13"},{"size":2481,"mtime":1606212408643,"results":"18","hashOfConfig":"13"},{"size":2890,"mtime":1606202567377,"results":"19","hashOfConfig":"13"},{"size":738,"mtime":1606202755270,"results":"20","hashOfConfig":"13"},{"size":1222,"mtime":1603659828975,"results":"21","hashOfConfig":"13"},{"size":3209,"mtime":1603614881422,"results":"22","hashOfConfig":"13"},{"size":3809,"mtime":1606216798157,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mqth3e",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/benweber/repos/discourse/src/styles.js",[],"/Users/benweber/repos/discourse/src/components/Text.jsx",[],"/Users/benweber/repos/discourse/src/components/Discourse.jsx",["48","49","50","51","52","53","54"],"/Users/benweber/repos/discourse/src/components/Img.jsx",["55"],"/Users/benweber/repos/discourse/src/components/Button.jsx",["56","57","58","59"],"/Users/benweber/repos/discourse/src/index.js",["60","61"],"/Users/benweber/repos/discourse/src/components/Div.jsx",["62"],"/Users/benweber/repos/discourse/src/components/ThemeToggler.jsx",["63"],"import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nconst Toggler = styled.button(props => ({\n  opacity: .3,\n  padding: props.used ? '.5rem .5rem' : '.5rem 2rem',\n  borderRadius: '100px',\n  outline: 0,\n  border: 0,\n  fontWeight: props.theme.regular,\n  background: props.theme.complement,\n  transition: 'all .5s ease',\n  display: 'block',\n  margin: 'auto',\n  zIndex: 999,\n\n  '&:hover': {\n    opacity: 1,\n    padding: !props.used && '.5rem 2.5rem',\n    transform: props.used && 'scale(1.2)'\n  },\n}))\n\nexport default props => {\n  const [used, setUsed] = useState(false)\n\n  const handleClick = _ => {\n    props.toggleMode()\n    setUsed(true)\n  }\n\n  return <Toggler onClick={handleClick} used={used} {...props} />\n}","/Users/benweber/repos/discourse/src/Preview.jsx",["64"],"import React, { useState, useEffect } from 'react'\nimport AnimateHeight from 'react-animate-height'\n\nimport Div from './components/Div'\nimport OmicPreview from './components/OmicPreview'\n\nconst sections = {\n  omic: {\n    name: 'Omic',\n    comp: <Omic />\n  },\n  p5: {\n\n  },\n  other: {\n\n  }\n}\n\nconst Preview = props => {\n  // const {  } = props\n  const [showing, setShowing] = useState(false)\n\n  return (\n    <Div style={{ position: 'absolute', bottom: 0, left: 0, width: '100%', border: '1px solid red' }}>\n      <AnimateHeight height={showing ? 'auto' : 0}>\n        {/* <Div p={20} bg='#5b9' full /> */}\n        {/* Make preview components for all categories.  */}\n        {/* Current idea: when they hover over the logo, show infr about it. The OmicPreview should have 3 screenshots, os, c19, and site. Not sure about third section */}\n      </AnimateHeight>\n      <Div center>\n        <Div onMouseOver={_ => setShowing(sections.omic) circle bg='white' p={30} m={20} />\n        <Div onMouseOver={_ => setShowing(sections.p5)} circle bg='palevioletred' p={30} m={20} />\n        <Div onMouseOver={_ => setShowing(sections.other)} circle bg='papayawhip' p={30} m={20} />\n      </Div>\n    </Div>\n  )\n}\n\nexport default Preview","/Users/benweber/repos/discourse/src/sketches/particleMesh.js",["65","66"],"/Users/benweber/repos/discourse/src/Home.jsx",["67","68","69"],{"ruleId":"70","severity":1,"message":"71","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"70","severity":1,"message":"74","line":1,"column":28,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},{"ruleId":"70","severity":1,"message":"75","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":11},{"ruleId":"70","severity":1,"message":"76","line":5,"column":8,"nodeType":"72","messageId":"73","endLine":5,"endColumn":12},{"ruleId":"70","severity":1,"message":"77","line":6,"column":8,"nodeType":"72","messageId":"73","endLine":6,"endColumn":11},{"ruleId":"70","severity":1,"message":"78","line":14,"column":20,"nodeType":"72","messageId":"73","endLine":14,"endColumn":24},{"ruleId":"70","severity":1,"message":"79","line":14,"column":28,"nodeType":"72","messageId":"73","endLine":14,"endColumn":35},{"ruleId":"80","severity":1,"message":"81","line":30,"column":1,"nodeType":"82","endLine":30,"endColumn":43},{"ruleId":"70","severity":1,"message":"75","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":11},{"ruleId":"83","severity":1,"message":"84","line":75,"column":3,"nodeType":"85","messageId":"86","endLine":75,"endColumn":12},{"ruleId":"80","severity":1,"message":"81","line":83,"column":1,"nodeType":"82","endLine":100,"endColumn":2},{"ruleId":"87","severity":1,"message":"88","line":98,"column":5,"nodeType":"89","endLine":98,"endColumn":71},{"ruleId":"70","severity":1,"message":"90","line":40,"column":13,"nodeType":"72","messageId":"73","endLine":40,"endColumn":14},{"ruleId":"70","severity":1,"message":"91","line":40,"column":16,"nodeType":"72","messageId":"73","endLine":40,"endColumn":17},{"ruleId":"87","severity":1,"message":"92","line":61,"column":49,"nodeType":"89","endLine":61,"endColumn":76},{"ruleId":"80","severity":1,"message":"81","line":24,"column":1,"nodeType":"82","endLine":33,"endColumn":2},{"ruleId":null,"fatal":true,"severity":2,"message":"93","line":32,"column":58},{"ruleId":"80","severity":1,"message":"81","line":3,"column":1,"nodeType":"82","endLine":84,"endColumn":2},{"ruleId":"70","severity":1,"message":"94","line":9,"column":7,"nodeType":"72","messageId":"73","endLine":9,"endColumn":12},{"ruleId":"70","severity":1,"message":"91","line":36,"column":23,"nodeType":"72","messageId":"73","endLine":36,"endColumn":24},{"ruleId":"95","severity":1,"message":"96","line":41,"column":18,"nodeType":"72","endLine":41,"endColumn":29},{"ruleId":"95","severity":1,"message":"97","line":54,"column":6,"nodeType":"98","endLine":54,"endColumn":8,"suggestions":"99"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Div' is defined but never used.","'Text' is defined but never used.","'Img' is defined but never used.","'mode' is assigned a value but never used.","'classes' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-dupe-keys","Duplicate key '&:hover'.","ObjectExpression","unexpected","react/jsx-pascal-case","Imported JSX component Button_ must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'w' is assigned a value but never used.","'h' is assigned a value but never used.","Imported JSX component _Div must be in PascalCase or SCREAMING_SNAKE_CASE","Parsing error: Unexpected token, expected \"}\"\n\n  30 |       </AnimateHeight>\n  31 |       <Div center>\n> 32 |         <Div onMouseOver={_ => setShowing(sections.omic) circle bg='white' p={30} m={20} />\n     |                                                          ^\n  33 |         <Div onMouseOver={_ => setShowing(sections.p5)} circle bg='palevioletred' p={30} m={20} />\n  34 |         <Div onMouseOver={_ => setShowing(sections.other)} circle bg='papayawhip' p={30} m={20} />\n  35 |       </Div>","'birds' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useEffect has a missing dependency: 'barsCB'. Either include it or remove the dependency array.","ArrayExpression",["100"],{"desc":"101","fix":"102"},"Update the dependencies array to be: [barsCB]",{"range":"103","text":"104"},[1388,1390],"[barsCB]"]